---
# Phase-based Streaming Server Deployment with GCS Mount Support
# Run from external laptop -> admin VM -> bastion hosts

- name: Phase 1a - Prepare Admin VM for K8s Management
  hosts: admin
  become: yes
  gather_facts: yes
  tags: ['phase1', 'setup']
  roles:
    - common
    - gcloud
    - content-manager

- name: Phase 1b - Prepare Bastion VM for K8s Management
  hosts: bastion-asia-southeast1
  become: yes
  gather_facts: yes
  tags: ['phase1', 'setup']
  roles:
    - common
    - bastion

- name: Phase 2 - Deploy Namespace to All Regions
  hosts: bastion-asia-southeast1
  become: yes
  gather_facts: yes
  tags: ['phase2', 'namespace']
  serial: 1  # Deploy one region at a time

  tasks:
    - name: Deploy namespace
      include_role:
        name: streaming-server
        tasks_from: deploy-namespace

- name: Phase 3 - Deploy ConfigMaps to All Regions
  hosts: bastion-asia-southeast1
  become: yes
  gather_facts: yes
  tags: ['phase3', 'configmap']
  serial: 1

  tasks:
    - name: Deploy streaming config
      include_role:
        name: streaming-server
        tasks_from: deploy-configmap

# üéØ NEW: Phase 4 - Deploy GCS FUSE Mount for Content Access
- name: Phase 4 - Deploy GCS FUSE Mount
  hosts: bastion-asia-southeast1
  become: yes
  gather_facts: yes
  tags: ['phase4', 'gcs-mount', 'storage']
  serial: 1

  tasks:
    - name: Deploy GCS FUSE mount
      include_role:
        name: streaming-server
        tasks_from: deploy-gcs-mount

- name: Phase 5 - Deploy HLS Streaming Server Deployment
  hosts: bastion-asia-southeast1
  become: yes
  gather_facts: yes
  tags: ['phase5', 'streaming']
  serial: 1

  tasks:
    - name: Deploy streaming deployment
      include_role:
        name: streaming-server
        tasks_from: deploy-deployment

- name: Phase 6 - Deploy Services
  hosts: bastion-asia-southeast1
  become: yes
  gather_facts: yes
  tags: ['phase6', 'service']
  serial: 1

  tasks:
    - name: Deploy streaming service
      include_role:
        name: streaming-server
        tasks_from: deploy-service

- name: Phase 7 - Deploy Ingress
  hosts: bastion-asia-southeast1
  become: yes
  gather_facts: yes
  tags: ['phase7', 'ingress']
  serial: 1

  tasks:
    - name: Deploy ingress
      include_role:
        name: streaming-server
        tasks_from: deploy-ingress

- name: Phase 8 - Deploy Monitoring (Optional)
  hosts: bastion-asia-southeast1
  become: yes
  gather_facts: yes
  tags: ['phase8', 'monitoring']
  serial: 1

  tasks:
    - name: Deploy monitoring stack
      include_role:
        name: streaming-server
        tasks_from: deploy-monitoring

- name: Phase 9 - Comprehensive Verification
  hosts: bastion-asia-southeast1
  become: yes
  gather_facts: yes
  tags: ['phase9', 'verify']

  tasks:
    - name: Verify deployment with GCS mount
      include_role:
        name: streaming-server
        tasks_from: verify-deployment

# üéØ NEW: Phase 10 - Content Upload Instructions
- name: Phase 10 - Display Content Upload Instructions
  hosts: admin
  gather_facts: no
  tags: ['phase10', 'instructions']

  tasks:
    - name: Display content upload instructions
      debug:
        msg: |
          üéâ DEPLOYMENT COMPLETE!
          
          üìÅ Content Upload Workflow:
          1. Upload videos to: {{ content_upload_dir }}
             Example: scp video.mp4 {{ admin_username }}@{{ admin_public_ip }}:{{ content_upload_dir }}/
          
          2. Distribute globally: sync-all-content
             (This syncs: uploads ‚Üí master bucket ‚Üí regional buckets ‚Üí pods)
          
          3. Verify access: https://{{ domain_name }}/videos/video.mp4
          
          üîß Management Commands:
          - Upload content: cd {{ content_upload_dir }} && sync-all
          - List content: list-content
          - Test GCS mount: ssh to bastion and run test-gcs-mount.sh
          - Monitor pods: kubectl logs -f -n streaming -l app=streaming-server
          
          üìä Access Points:
          - Main site: https://{{ domain_name }}
          - Video library: https://{{ domain_name }}/videos/
          - Live streaming: https://{{ domain_name }}/live/
          - Health check: https://{{ domain_name }}/health
          
          üóÑÔ∏è  Storage Architecture:
          - Master bucket: {{ master_bucket_name }} (EU)
          - Regional caches: Auto-synced to each region's bucket
          - Pod access: /mnt/videos (mounted via GCS FUSE)
          
          ‚ö° Next Steps:
          1. Upload some test videos
          2. Run sync-all-content
          3. Test access via web browser
          4. Monitor performance and scaling
# playbooks/roles/bastion/tasks/main.yaml
---
# Bastion host configuration tasks

- name: Kill any stuck dpkg processes
  shell: |
    pkill -f dpkg || true
    pkill -f apt || true
  ignore_errors: yes

- name: Remove dpkg lock files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /var/lib/dpkg/lock
    - /var/lib/dpkg/lock-frontend
    - /var/lib/apt/lists/lock
    - /var/cache/apt/archives/lock
  ignore_errors: yes

- name: Clean apt cache
  shell: |
    apt clean
    apt autoclean
  ignore_errors: yes

- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 0
    force_apt_get: yes
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Add Google Cloud SDK apt key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
    keyring: /usr/share/keyrings/cloud.google.gpg

- name: Add Google Cloud SDK repository
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main"
    state: present
    filename: google-cloud-sdk

- name: Update apt cache after adding Google repository
  apt:
    update_cache: yes

- name: Install Google Cloud SDK with GKE auth plugin (clean install)
  apt:
    name:
      - google-cloud-sdk
      - kubectl
      - google-cloud-sdk-gke-gcloud-auth-plugin
    state: present
    force_apt_get: yes
  environment:
    DEBIAN_FRONTEND: noninteractive
  register: gcloud_install
  until: gcloud_install is succeeded
  retries: 3
  delay: 30


- name: Configure gcloud auth plugin environment system-wide
  lineinfile:
    path: /etc/environment
    line: 'USE_GKE_GCLOUD_AUTH_PLUGIN=True'
    state: present

- name: Add gcloud auth plugin to user profile
  lineinfile:
    path: "/home/{{ admin_username }}/.bashrc"
    line: 'export USE_GKE_GCLOUD_AUTH_PLUGIN=True'
    state: present
    owner: "{{ admin_username }}"
    group: "{{ admin_username }}"

- name: Create scripts directory
  file:
    path: "/opt/scripts"
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Create cluster connection script
  template:
    src: connect-to-local-cluster.sh.j2
    dest: "/opt/scripts/connect-to-local-cluster.sh"
    mode: '0755'
    owner: root
    group: root

- name: Install Python packages for K8s
  pip:
    name:
      - kubernetes
      - openshift
      - pyyaml
    state: present

- name: Display bastion information
  debug:
    msg: |
      Bastion host configured for region: {{ bastion_region }}
      GKE cluster: {{ project_name }}-gke-{{ bastion_region }}
      Use: /opt/scripts/connect-to-local-cluster.sh

- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  loop:
    - "/opt/scripts"
    - "/opt/gcp"

- name: Set secure permissions on GCP directory
  file:
    path: "/opt/gcp"
    mode: '0700'
    owner: root
    group: root

- name: Copy service account credentials
  copy:
    src: "~/terraform-sa.json"
    dest: "/opt/gcp/terraform-sa.json"
    mode: '0600'
    owner: root
    group: root

- name: Authenticate gcloud with service account
  command: gcloud auth activate-service-account --key-file=/opt/gcp/terraform-sa.json
  become: yes

- name : Connect to local GKE cluster
  shell : "/opt/scripts/connect-to-local-cluster.sh"
  register : cluster_connect





---
# Google Cloud SDK installation and configuration tasks

- name: Add Google Cloud SDK apt key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
    keyring: /usr/share/keyrings/cloud.google.gpg

- name: Add Google Cloud SDK repository
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main"
    state: present
    filename: google-cloud-sdk

- name: Install Google Cloud SDK with GKE auth plugin
  apt:
    name:
      - google-cloud-sdk
      - kubectl
      - google-cloud-sdk-gke-gcloud-auth-plugin
    state: present
    update_cache: yes

- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  loop:
    - "/opt/scripts"
    - "/opt/gcp"

- name: Set secure permissions on GCP directory
  file:
    path: "/opt/gcp"
    mode: '0700'
    owner: root
    group: root

- name: Copy service account credentials
  copy:
    src: "~/terraform-sa.json"
    dest: "/opt/gcp/terraform-sa.json"
    mode: '0600'
    owner: root
    group: root

- name: Authenticate gcloud with service account
  command: gcloud auth activate-service-account --key-file=/opt/gcp/terraform-sa.json
  become: yes

- name: Configure gcloud project
  command: gcloud config set project {{ project_id }}
  become: yes

- name: Configure gcloud default region
  command: gcloud config set compute/region {{ regions[0] }}
  become: yes

- name: Configure gcloud default zone
  command: gcloud config set compute/zone {{ regions[0] }}-a
  become: yes

- name: Configure gcloud auth plugin environment
  lineinfile:
    path: /etc/environment
    line: 'USE_GKE_GCLOUD_AUTH_PLUGIN=True'
    state: present

- name: Add gcloud auth plugin to user profile
  lineinfile:
    path: "/home/{{ admin_username }}/.bashrc"
    line: 'export USE_GKE_GCLOUD_AUTH_PLUGIN=True'
    state: present
    owner: "{{ admin_username }}"
    group: "{{ admin_username }}"

- name: Create GKE connection script
  template:
    src: connect-to-cluster.sh.j2
    dest: "/opt/scripts/connect-to-cluster.sh"
    mode: '0755'
    owner: root
    group: root

- name: Create network debug script
  template:
    src: network-debug.sh.j2
    dest: "/opt/scripts/network-debug.sh"
    mode: '0755'
    owner: root
    group: root

- name: Create cluster status check script
  template:
    src: check-cluster-status.sh.j2
    dest: "/opt/scripts/check-cluster-status.sh"
    mode: '0755'
    owner: root
    group: root

- name: Install Python packages for K8s
  pip:
    name:
      - kubernetes
      - openshift
      - pyyaml
    state: present

- name: Verify gcloud authentication
  command: gcloud auth list --filter=status:ACTIVE --format="value(account)"
  register: gcloud_auth_result
  become: yes

- name: Display active gcloud account
  debug:
    msg: "Active gcloud account: {{ gcloud_auth_result.stdout }}"


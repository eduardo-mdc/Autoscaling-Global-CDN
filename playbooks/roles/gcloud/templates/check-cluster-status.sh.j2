#!/bin/bash

# Check status of all GKE clusters
export USE_GKE_GCLOUD_AUTH_PLUGIN=True

echo "=== GKE Cluster Status Check ==="
echo "Project: {{ project_id }}"
echo "Regions: {{ regions | join(', ') }}"
echo ""

{% for region in regions %}
echo "--- Region: {{ region }} ---"
CLUSTER_NAME="{{ project_name }}-gke-{{ region }}"

echo "Checking cluster: $CLUSTER_NAME"
if gcloud container clusters describe $CLUSTER_NAME --region {{ region }} --project {{ project_id }} --format="value(status)" 2>/dev/null | grep -q "RUNNING"; then
    echo "✓ Cluster $CLUSTER_NAME is RUNNING"

    # Get basic cluster info
    echo "  Master version: $(gcloud container clusters describe $CLUSTER_NAME --region {{ region }} --project {{ project_id }} --format="value(currentMasterVersion)" 2>/dev/null)"
    echo "  Node count: $(gcloud container clusters describe $CLUSTER_NAME --region {{ region }} --project {{ project_id }} --format="value(currentNodeCount)" 2>/dev/null)"
    echo "  Endpoint: $(gcloud container clusters describe $CLUSTER_NAME --region {{ region }} --project {{ project_id }} --format="value(endpoint)" 2>/dev/null)"
else
    echo "✗ Cluster $CLUSTER_NAME is not running or not found"
fi
echo ""
{% endfor %}

echo "=== Node Pool Status ==="
{% for region in regions %}
echo "--- {{ region }} Node Pools ---"
gcloud container node-pools list --cluster="{{ project_name }}-gke-{{ region }}" --region={{ region }} --project={{ project_id }} --format="table(name,status,machineType,diskSizeGb,nodeCount)" 2>/dev/null || echo "No node pools found for {{ region }}"
echo ""
{% endfor %}

echo "=== Network Information ==="
echo "Admin VM is in network: {{ project_name }}-admin-vpc"
echo "Admin VM subnet: 10.250.0.0/24"
echo ""
echo "Regional Networks:"
{% for region in regions %}
echo "  {{ region }}: {{ project_name }}-vpc-{{ region }} (10.{{ loop.index }}.0.0/20)"
{% endfor %}
echo ""

echo "=== Network Isolation Test ==="
echo "Testing that admin VM can reach cluster APIs via authorized networks..."
{% for region in regions %}
echo "--- {{ region }} ---"
CLUSTER_NAME="{{ project_name }}-gke-{{ region }}"
echo "Testing gcloud API access to $CLUSTER_NAME..."
if gcloud container clusters describe $CLUSTER_NAME --region {{ region }} --project {{ project_id }} --format="value(status)" >/dev/null 2>&1; then
    echo "✓ Can access $CLUSTER_NAME via gcloud API (authorized network)"

    # Test kubectl access (this uses the private endpoint if configured)
    if /opt/scripts/connect-to-cluster.sh {{ region }} >/dev/null 2>&1; then
        echo "✓ kubectl can connect to $CLUSTER_NAME"
    else
        echo "⚠ kubectl cannot connect to $CLUSTER_NAME (check master authorized networks)"
    fi
else
    echo "✗ Cannot access $CLUSTER_NAME via gcloud API"
fi
echo ""
{% endfor %}

echo ""
echo "=== Available kubectl contexts ==="
kubectl config get-contexts 2>/dev/null || echo "No kubectl contexts configured"
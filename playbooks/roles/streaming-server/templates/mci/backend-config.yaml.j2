# playbooks/roles/streaming-server/templates/backend-config.yaml.j2
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: {{ project_name }}-oauth2-backend-config
  namespace: {{ app_namespace }}
  labels:
    app: oauth2-proxy
    created-by: ansible
spec:
  # Health check configuration - OAuth2 proxy /ping endpoint
  healthCheck:
    checkIntervalSec: {{ health_check_interval | default('10') }}
    timeoutSec: {{ health_check_timeout | default('5') }}
    healthyThreshold: {{ health_check_healthy_threshold | default('2') }}
    unhealthyThreshold: {{ health_check_unhealthy_threshold | default('3') }}
    type: HTTP
    requestPath: "/ping"  # OAuth2 proxy health endpoint
    port: 4180  # OAuth2 proxy external port

  # Timeout configuration for OAuth2 proxy
  timeoutSec: {{ backend_timeout | default('60') }}

  # Connection draining for graceful shutdowns
  connectionDraining:
    drainingTimeoutSec: {{ connection_draining_timeout | default('60') }}

  # Session affinity for OAuth2 cookies
  sessionAffinity:
    affinityType: "CLIENT_IP"
    affinityCookieTtlSec: 3600

  # Custom request headers for OAuth2
  customRequestHeaders:
    headers:
      - "X-Real-IP: {client_ip_address}"
      - "X-Forwarded-Proto: https"
      - "X-OAuth2-Proxy: true"

  iap:
    enabled: false

---
# Separate backend config for streaming content (when accessed directly)
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: {{ project_name }}-streaming-backend-config
  namespace: {{ app_namespace }}
  labels:
    app: {{ app_name }}
    created-by: ansible
spec:
  # Health check for direct streaming access
  healthCheck:
    checkIntervalSec: 15
    timeoutSec: 10
    healthyThreshold: 2
    unhealthyThreshold: 3
    type: HTTP
    requestPath: "/health"
    port: 80

  # Longer timeout for video streaming
  timeoutSec: 120

  # Connection draining
  connectionDraining:
    drainingTimeoutSec: 60

  # No session affinity for streaming content
  sessionAffinity:
    affinityType: "NONE"

  # Custom headers for streaming
  customRequestHeaders:
    headers:
      - "X-Real-IP: {client_ip_address}"
      - "X-Forwarded-Proto: https"
      - "X-Content-Source: streaming-backend"

  iap:
    enabled: false
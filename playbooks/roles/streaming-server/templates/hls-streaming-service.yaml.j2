apiVersion: v1
kind: Service
metadata:
  name: {{ app_name }}
  namespace: {{ app_namespace }}
  annotations:
    cloud.google.com/backend-config: '{"default": "{{ project_name }}-backend-config"}'
    cloud.google.com/neg: '{{ cloud_neg | default('{"ingress": true}') }}'
    prometheus.io/scrape: "{{ prometheus_scrape | default('true') }}"
    prometheus.io/port: "{{ metrics_port | default('9090') }}"
    prometheus.io/path: "/metrics"
{% if extra_annotations is defined %}
{% for key, value in extra_annotations.items() %}
    {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}
  labels:
    app: {{ app_name }}
    environment: {{ deployment_environment | default('production') }}
    streaming-type: hls
    created-by: ansible
{% if service_labels is defined %}
{% for key, value in service_labels.items() %}
    {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}
spec:
  type: {{ service_type | default('NodePort') }}
  selector:
    app: {{ app_name }}
  ports:
    - port: {{ app_http_port | default('80') | int }}
      targetPort: {{ app_http_port | default('80') | int }}
      protocol: TCP
      name: http
{% if service_type == 'NodePort' and http_node_port is defined %}
      nodePort: {{ http_node_port }}
{% endif %}
    - port: {{ app_https_port | default('443') | int }}
      targetPort: {{ app_https_port | default('443') | int }}
      protocol: TCP
      name: https
{% if service_type == 'NodePort' and https_node_port is defined %}
      nodePort: {{ https_node_port }}
{% endif %}
    - port: {{ metrics_port | default('9090') | int }}
      targetPort: {{ metrics_port | default('9090') | int }}
      protocol: TCP
      name: metrics
{% if service_type == 'NodePort' and metrics_node_port is defined %}
      nodePort: {{ metrics_node_port }}
{% endif %}
{% if extra_ports is defined %}
{% for port in extra_ports %}
    - port: {{ port.port }}
      targetPort: {{ port.targetPort | default(port.port) }}
      protocol: {{ port.protocol | default('TCP') }}
      name: {{ port.name }}
{% if service_type == 'NodePort' and port.nodePort is defined %}
      nodePort: {{ port.nodePort }}
{% endif %}
{% endfor %}
{% endif %}
{% if session_affinity is defined %}
  sessionAffinity: {{ session_affinity }}
{% endif %}
{% if external_traffic_policy is defined and service_type in ['NodePort', 'LoadBalancer'] %}
  externalTrafficPolicy: {{ external_traffic_policy }}
{% endif %}
{% if load_balancer_source_ranges is defined and service_type == 'LoadBalancer' %}
  loadBalancerSourceRanges:
{% for range in load_balancer_source_ranges %}
    - {{ range }}
{% endfor %}
{% endif %}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ configmap_name | default('latency-exporter-config') }}
  namespace: {{ app_namespace }}
data:
  exporter.conf: |
    # Latency metrics exporter configuration
    interval: {{ metrics_interval | default('5s') }}
    endpoint: {{ metrics_endpoint | default('/metrics') }}
    port: {{ metrics_port | default('9090') }}

    # Connection metrics
    metrics:
      - name: {{ metric_prefix | default('streaming') }}_connection_latency_seconds
        help: "{{ latency_metric_help | default('Client connection latency in seconds') }}"
        type: {{ latency_metric_type | default('histogram') }}
        buckets: {{ latency_buckets | default('[0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10]') }}

      - name: {{ metric_prefix | default('streaming') }}_connections_total
        help: "{{ connections_metric_help | default('Total number of client connections') }}"
        type: {{ connections_metric_type | default('counter') }}

      - name: {{ metric_prefix | default('streaming') }}_connection_errors_total
        help: "{{ errors_metric_help | default('Total number of connection errors') }}"
        type: {{ errors_metric_type | default('counter') }}

      - name: {{ metric_prefix | default('streaming') }}_bandwidth_bytes
        help: "{{ bandwidth_metric_help | default('Bandwidth usage in bytes') }}"
        type: {{ bandwidth_metric_type | default('gauge') }}
{% if extra_metrics is defined %}
{% for metric in extra_metrics %}

      - name: {{ metric.name }}
        help: "{{ metric.help }}"
        type: {{ metric.type }}
{% if metric.type == 'histogram' and metric.buckets is defined %}
        buckets: {{ metric.buckets }}
{% endif %}
{% endfor %}
{% endif %}

    # Log sampling configuration
    log_sampling:
      enabled: {{ log_sampling_enabled | default('true') }}
      sample_rate: {{ log_sampling_rate | default('0.1') }}
{% if extra_config_sections is defined %}
{% for section in extra_config_sections %}

    # {{ section.name }}
{% for key, value in section.values.items() %}
    {{ key }}: {{ value }}
{% endfor %}
{% endfor %}
{% endif %}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ app_name }}-nginx-config
  namespace: {{ app_namespace }}
  labels:
    app: {{ app_name }}
    config-type: nginx
data:
  nginx.conf: |
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;
        client_max_body_size 100M;

        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/atom+xml image/svg+xml application/vnd.apple.mpegurl application/x-mpegurl;

        limit_req_zone $binary_remote_addr zone=hls:10m rate=10r/s;

        # HTTP Server (port 80) - All functionality
        server {
            listen 80;
            server_name _;

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

            # Health endpoint for load balancer
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            # Metrics endpoint
            location /metrics {
                access_log off;
                return 200 "# TYPE nginx_up gauge\nnginx_up 1\n";
                add_header Content-Type text/plain;
            }

            # Main page
            location / {
                root /usr/share/nginx/html;
                index index.html;
                try_files $uri $uri/ =404;
            }

            # Static files
            location /files/ {
                alias /usr/share/nginx/html/files/;
                autoindex on;
                autoindex_exact_size off;
                autoindex_localtime on;
            }

            # Live streaming page
            location /live/ {
                root /usr/share/nginx/html;
                index index.html;
                try_files $uri $uri/live-index.html =404;
            }

            location /hls/ {
                limit_req          zone=hls burst=20 nodelay;
                autoindex          on;
                autoindex_exact_size off;
                autoindex_localtime on;
            }

            # 2) Serve .m3u8 playlists from the GCS CSI mount,
            #    capturing any sub-folder name in $1
            location ~ ^/hls/(.+\.m3u8)$ {
                alias /mnt/videos/hls/$1;
                add_header 'Content-Type'                'application/vnd.apple.mpegurl' always;
                add_header 'Cache-Control'               'no-cache'                      always;
                add_header 'Access-Control-Allow-Origin' '*'                            always;
            }

            # 3) Serve .ts segments the same way
            location ~ ^/hls/(.+\.ts)$ {
                alias /mnt/videos/hls/$1;
                add_header 'Content-Type'                'video/mp2t'                   always;
                add_header 'Cache-Control'               'max-age=3600'                 always;
                add_header 'Access-Control-Allow-Origin' '*'                            always;
            }

            # Video files from storage
            location /videos/ {
                alias /mnt/videos/videos/;

                location ~ \.(mp4|mkv|avi|mov|wmv|flv|webm|m4v)$ {
                    add_header 'Content-Type' 'video/mp4' always;
                    add_header 'Cache-Control' 'max-age=3600' always;
                    add_header 'Access-Control-Allow-Origin' '*' always;
                    add_header 'Accept-Ranges' 'bytes' always;
                }

                autoindex on;
                autoindex_exact_size off;
                autoindex_localtime on;
            }
        }
    }
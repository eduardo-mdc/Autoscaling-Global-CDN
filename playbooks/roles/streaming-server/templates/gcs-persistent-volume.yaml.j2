# GCS FUSE PersistentVolume for regional content bucket
# File: playbooks/roles/streaming-server/templates/gcs-persistent-volume.yaml.j2
apiVersion: v1
kind: PersistentVolume
metadata:
  name: gcs-videos-pv-{{ bastion_region }}
  labels:
    app: {{ app_name }}
    region: {{ bastion_region }}
    storage-type: gcs-fuse
    content-type: videos
  annotations:
    description: "GCS FUSE persistent volume for {{ bastion_region }} content"
    bucket-name: "{{ regional_bucket_names[bastion_region] }}"
    created-by: "ansible"
spec:
  capacity:
    # Symbolic capacity - GCS buckets don't have fixed size limits
    storage: 1000Gi

  accessModes:
    - ReadOnlyMany  # Multiple pods can read simultaneously

  persistentVolumeReclaimPolicy: Retain

  # Use our regional storage class
  storageClassName: gcs-fuse-{{ bastion_region }}

  # GCS FUSE CSI driver configuration
  csi:
    driver: gcs-fuse.csi.storage.gke.io
    volumeHandle: "{{ regional_bucket_names[bastion_region] }}"  # Must be unique

    # CSI driver specific parameters
    volumeAttributes:
      bucketName: "{{ regional_bucket_names[bastion_region] }}"
      mountOptions: "implicit-dirs,uid=101,gid=101,file-mode=644,dir-mode=755"

      # Performance optimizations for video streaming
      metadataStatCacheCapacity: "32768"
      typeCacheMaxSizeMB: "1024"
      fileCacheCapacity: "1000"

      # Read-only access
      readOnly: "true"

      # Service account for authentication (will be bound via Workload Identity)
      serviceAccount: "{{ content_reader_sa_email }}"

  # Node affinity to ensure the volume can be mounted on any node in this region
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: topology.kubernetes.io/region
              operator: In
              values:
                - {{ bastion_region }}
# Sample Kubernetes configuration file
# This should be applied after the infrastructure is created
# Run this separately, not as part of the main Terraform run

# Use this file from the admin VM, ensuring proper access to the GKE clusters:
# 1. Copy this file to the admin VM
# 2. Edit as needed to deploy your specific services
# 3. Run with: kubectl apply -f kubernetes-config.yaml

---
# Backend Config for Cloud Load Balancing
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: global-http-backend-config
  namespace: default
spec:
  timeoutSec: 30
  connectionDraining:
    drainingTimeoutSec: 60
  sessionAffinity:
    affinityType: GENERATED_COOKIE
    affinityCookieTtlSec: 1800
  healthCheck:
    checkIntervalSec: 5
    timeoutSec: 5
    healthyThreshold: 2
    unhealthyThreshold: 3
    type: HTTP
    requestPath: /healthz
    port: 80

---
# Sample service using the BackendConfig
apiVersion: v1
kind: Service
metadata:
  name: example-service
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "global-http-backend-config"}'
spec:
  selector:
    app: example-app
  ports:
    - port: 80
      targetPort: 8080
  type: ClusterIP

---
# Sample deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: example-app
  template:
    metadata:
      labels:
        app: example-app
    spec:
      containers:
        - name: web
          image: nginx:latest
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20

---
# Sample Ingress for Global HTTP Load Balancing
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-ingress
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "global-http-global-ip"
spec:
  rules:
    - http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: example-service
                port:
                  number: 80